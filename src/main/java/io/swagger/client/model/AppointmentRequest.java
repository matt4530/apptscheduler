/*
 * Brevium Interview 2021 API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * AppointmentRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-02-24T19:59:02.572704900-07:00[America/Denver]")

public class AppointmentRequest {
  @SerializedName("requestId")
  private Integer requestId = null;

  @SerializedName("personId")
  private Integer personId = null;

  @SerializedName("preferredDays")
  private List<OffsetDateTime> preferredDays = null;

  @SerializedName("preferredDocs")
  private List<Integer> preferredDocs = null;

  @SerializedName("isNew")
  private Boolean isNew = null;

  public AppointmentRequest requestId(Integer requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Get requestId
   * @return requestId
  **/
  @Schema(description = "")
  public Integer getRequestId() {
    return requestId;
  }

  public void setRequestId(Integer requestId) {
    this.requestId = requestId;
  }

  public AppointmentRequest personId(Integer personId) {
    this.personId = personId;
    return this;
  }

   /**
   * Get personId
   * @return personId
  **/
  @Schema(description = "")
  public Integer getPersonId() {
    return personId;
  }

  public void setPersonId(Integer personId) {
    this.personId = personId;
  }

   /**
   * Get preferredDays
   * @return preferredDays
  **/
  @Schema(description = "")
  public List<OffsetDateTime> getPreferredDays() {
    return preferredDays;
  }

  /**
   * Generated By Matt since it wasn't auto-generated for some reason
   * @param preferredDays
   */
  public void setPreferredDays(List<OffsetDateTime> preferredDays) {
    this.preferredDays = preferredDays;
  }

  public AppointmentRequest preferredDocs(List<Integer> preferredDocs) {
    this.preferredDocs = preferredDocs;
    return this;
  }

  public AppointmentRequest addPreferredDocsItem(Integer preferredDocsItem) {
    if (this.preferredDocs == null) {
      this.preferredDocs = new ArrayList<Integer>();
    }
    this.preferredDocs.add(preferredDocsItem);
    return this;
  }

   /**
   * Get preferredDocs
   * @return preferredDocs
  **/
  @Schema(description = "")
  public List<Integer> getPreferredDocs() {
    return preferredDocs;
  }

  public void setPreferredDocs(List<Integer> preferredDocs) {
    this.preferredDocs = preferredDocs;
  }

  public AppointmentRequest isNew(Boolean isNew) {
    this.isNew = isNew;
    return this;
  }

   /**
   * Get isNew
   * @return isNew
  **/
  @Schema(description = "")
  public Boolean isIsNew() {
    return isNew;
  }

  public void setIsNew(Boolean isNew) {
    this.isNew = isNew;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppointmentRequest appointmentRequest = (AppointmentRequest) o;
    return Objects.equals(this.requestId, appointmentRequest.requestId) &&
        Objects.equals(this.personId, appointmentRequest.personId) &&
        Objects.equals(this.preferredDays, appointmentRequest.preferredDays) &&
        Objects.equals(this.preferredDocs, appointmentRequest.preferredDocs) &&
        Objects.equals(this.isNew, appointmentRequest.isNew);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, personId, preferredDays, preferredDocs, isNew);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppointmentRequest {\n");
    
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    preferredDays: ").append(toIndentedString(preferredDays)).append("\n");
    sb.append("    preferredDocs: ").append(toIndentedString(preferredDocs)).append("\n");
    sb.append("    isNew: ").append(toIndentedString(isNew)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
